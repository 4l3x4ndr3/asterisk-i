diff -Naur asterisk-1.8.3.2_orig/main/config.c asterisk-1.8.3.2/main/config.c
--- asterisk-1.8.3.2_orig/main/config.c	2010-08-27 21:31:55.000000000 +0100
+++ asterisk-1.8.3.2/main/config.c	2012-08-22 16:50:00.000000000 +0100
@@ -1019,10 +1019,12 @@
 		if (newcat)
 			ast_category_append(cfg, *cat);
 	} else if (cur[0] == '#') { /* A directive - #include or #exec */
+		struct ast_config *res;
 		char *cur2;
 		char real_inclusion_name[256];
 		struct ast_config_include *inclu;
 		int do_include = 0;	/* otherwise, it is exec */
+		int quiet = 0;
 
 		cur++;
 		c = cur;
@@ -1042,6 +1044,9 @@
 		}
 		if (!strcasecmp(cur, "include")) {
 			do_include = 1;
+		} else if (!strcasecmp(cur, "-include")) {
+			do_include = 1;
+			quiet = 1;
 		} else if (!strcasecmp(cur, "exec")) {
 			if (!ast_opt_exec_includes) {
 				ast_log(LOG_WARNING, "Cannot perform #exec unless execincludes option is enabled in asterisk.conf (options section)!\n");
@@ -1054,7 +1059,7 @@
 
 		if (c == NULL) {
 			ast_log(LOG_WARNING, "Directive '#%s' needs an argument (%s) at line %d of %s\n", 
-					do_include ? "include" : "exec",
+					cur,
 					do_include ? "filename" : "/path/to/executable",
 					lineno,
 					configfile);
@@ -1096,10 +1101,13 @@
 		/* record this inclusion */
 		inclu = ast_include_new(cfg, cfg->include_level == 1 ? "" : configfile, cur, !do_include, cur2, lineno, real_inclusion_name, sizeof(real_inclusion_name));
 
-		do_include = ast_config_internal_load(cur, cfg, flags, real_inclusion_name, who_asked) ? 1 : 0;
+		res = ast_config_internal_load(cur, cfg, flags, real_inclusion_name, who_asked);
 		if (!ast_strlen_zero(exec_file))
 			unlink(exec_file);
-		if (!do_include) {
+		if (res == CONFIG_STATUS_FILEINVALID) {
+			ast_log(LOG_ERROR, "The file '%s' was listed as a #include but it failed to load.\n", cur);
+			return -1;
+		} else if (res == CONFIG_STATUS_FILEMISSING && !quiet) {
 			ast_log(LOG_ERROR, "The file '%s' was listed as a #include but it does not exist.\n", cur);
 			return -1;
 		}
@@ -1468,7 +1476,7 @@
 	}
 	
 	if (count == 0)
-		return NULL;
+		return CONFIG_STATUS_FILEMISSING;
 
 	return cfg;
 }
