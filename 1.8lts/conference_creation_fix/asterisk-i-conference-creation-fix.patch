diff -Naur asterisk-base-1.8.3.2/apps/app_wms.c asterisk-1.8.3.2/apps/app_wms.c
--- asterisk-base-1.8.3.2/apps/app_wms.c	2012-12-10 10:02:46.192947214 +0000
+++ asterisk-1.8.3.2/apps/app_wms.c	2012-12-11 15:29:06.825227000 +0000
@@ -586,6 +586,7 @@
 
    tempcs[0] = chan;
    numcs = 1;
+   chan_vars->chan = chan;
 
 //- MAIN LOOP ------------------------------------------------------------------------
 	while (!chan_vars->shutdown)
diff -Naur asterisk-base-1.8.3.2/apps/app_wms.h asterisk-1.8.3.2/apps/app_wms.h
--- asterisk-base-1.8.3.2/apps/app_wms.h	2012-12-10 10:02:46.196947312 +0000
+++ asterisk-1.8.3.2/apps/app_wms.h	2012-12-11 15:36:32.889055000 +0000
@@ -81,6 +81,7 @@
       int exit;
    } conference;
    pthread_t conf_thread;
+   struct ast_channel *chan;
    struct
    {
       int enabled;
diff -Naur asterisk-base-1.8.3.2/apps/wms_inoapi.c asterisk-1.8.3.2/apps/wms_inoapi.c
--- asterisk-base-1.8.3.2/apps/wms_inoapi.c	2012-12-10 10:02:46.220947377 +0000
+++ asterisk-1.8.3.2/apps/wms_inoapi.c	2012-12-11 16:51:50.698031000 +0000
@@ -58,7 +58,7 @@
  * VARIABLES
  *
  ******************************************************************************/
-struct conf_struct
+typedef struct conf_struct
 {
    struct ast_channel *chan;
    ast_vars *chan_vars;
@@ -477,8 +477,6 @@
       {
          //unsigned long stack_size = 240 * 1024;
 
-         conf_data.chan = chan;
-         conf_data.chan_vars = chan_vars;
 	      chan_vars->conference.cmd_cnt = trs_cmd.cmd_cnt;
 	      chan_vars->conference.con_id = trs_cmd.con_id;
 	      chan_vars->conference.edp_id = trs_cmd.edp_id;
@@ -504,7 +502,7 @@
                   //Conference Record File
                   if(trs_cmd.al_char_val1[0] == ' ')
                      break;
-					 
+
 				  // DTMF-Passthrough
 				  if(trs_cmd.al_char_val1[0] == 'F')
 				  {
@@ -515,7 +513,7 @@
 				  {
 					strncpy(chan->conf_record, trs_cmd.al_char_val1, sizeof(chan->conf_record));
 				  }
-				  
+
                   if((end = strchr(chan->conf_record, '\e')) != NULL)
                      *end = '\0';
 
@@ -598,7 +596,7 @@
             ast_log(LOG_WARNING, "Thread in use! Ignoring conference %d on ch %03d - %s\n", trs_cmd.al_int_val2, trs_cmd.ch_index, chan->name);
             goto error;
          }
-         if (ast_pthread_create_background(&chan_vars->conf_thread, NULL, conference_thread, NULL) < 0)
+         if (ast_pthread_create_background(&chan_vars->conf_thread, NULL, conference_thread, chan_vars) < 0)
          {
             memset(&chan_vars->conference, 0, sizeof(chan_vars->conference));
             ast_log(LOG_WARNING, "Thread creation ERROR |%s| for conference %d on ch %03d - %s\n", strerror(errno), trs_cmd.al_int_val2, trs_cmd.ch_index, chan->name);
@@ -739,11 +737,14 @@
 static void *conference_thread(void *data)
 {
 	struct ast_app *app; // AGI RELATED
-   struct ast_channel *chan = conf_data.chan;
-   ast_vars *chan_vars = conf_data.chan_vars;
+   struct ast_channel *chan;
+   ast_vars *chan_vars;
    char execCmd[15];
 	reply_ast trs_reply;
 
+	chan_vars = (ast_vars *) data;
+	chan = chan_vars->chan;
+
    memset(&trs_reply, 0, sizeof(trs_reply));
    trs_reply.cmd_cnt = chan_vars->conference.cmd_cnt;
 	trs_reply.con_id = chan_vars->conference.con_id;
