diff -Naur asterisk_com_smra/channels/chan_sip.c asterisk_com_reject/channels/chan_sip.c
--- asterisk_com_smra/channels/chan_sip.c	2012-03-30 16:23:30.000000000 +0100
+++ asterisk_com_reject/channels/chan_sip.c	2012-04-04 16:47:53.000000000 +0100
@@ -741,8 +741,11 @@
 
 static int global_dynamic_exclude_static = 0; /*!< Exclude static peers from contact registrations */
 
+static int global_defhangcause = AST_CAUSE_CALL_REJECTED;
+static int global_videosize = DEFAULT_VIDEO_SIZE; //CIF
 static int global_amr_mode = DEFAULT_AMR_MODE;
 static int global_amr_octetalign = DEFAULT_OCTET_ALIGN;
+static char global_reject_mode[AST_MAX_EXTENSION]; /*! strlen = 0 - ignore SIP OPTIONS, strlen > 0 - responde xx to SIP OPTIONS */
 /*@}*/
 
 /*!
@@ -20653,6 +20656,13 @@
 		return 0;
 	}
 
+	if (ast_opt_reject_mode && global_reject_mode[0] == 0)
+	{
+	      res = 0;
+	      ast_log(LOG_NOTICE, "Ignoring SIP OPTIONS on REJECT mode!\n");
+	}
+	else
+	{
 	if (sip_cfg.auth_options_requests) {
 		/* Do authentication if this OPTIONS request began the dialog */
 		copy_request(&p->initreq, req);
@@ -20688,10 +20698,10 @@
 		transmit_response_with_allow(p, "404 Not Found", req, 0);
 	else
 		transmit_response_with_allow(p, "200 OK", req, 0);
-
+	}
 	/* Destroy if this OPTIONS was the opening request, but not if
 	   it's in the middle of a normal call flow. */
-	sip_scheddestroy(p, DEFAULT_TRANS_TIMEOUT);
+	sip_scheddestroy(p, 2000);
 
 	return res;
 }
@@ -23634,6 +23644,16 @@
 	/* Get the command XXX */
 
 	cmd = REQ_OFFSET_TO_STR(req, rlPart1);
+
+	/* sip_extended_params support */
+	// process any url_params in the URL (e.g."voicexml=<url>")
+	if (!strcasecmp(cmd, "INVITE"))
+	{
+		if ((e = strchr(REQ_OFFSET_TO_STR(req, rlPart2), ';')))
+	         strncpy(p->url_params, e + 1, sizeof(p->url_params));
+	    else p->url_params[0] = '\0';
+	}
+
 	e = ast_skip_blanks(REQ_OFFSET_TO_STR(req, rlPart2));
 
 	/* Save useragent of the client */
@@ -26675,6 +26695,9 @@
 	global_qualify_gap = DEFAULT_QUALIFY_GAP;
 	global_qualify_peers = DEFAULT_QUALIFY_PEERS;
 
+	ast_copy_string(global_reject_mode, DEFAULT_REJECT_MODE, sizeof(global_reject_mode));
+	global_defhangcause = AST_CAUSE_CALL_REJECTED;
+	global_videosize = DEFAULT_VIDEO_SIZE; //CIF
 	global_amr_mode = DEFAULT_AMR_MODE;
 	global_amr_octetalign = DEFAULT_OCTET_ALIGN;
 
@@ -27186,7 +27209,32 @@
 			} else {
 				ast_log(LOG_WARNING, "shrinkcallerid value %s is not valid at line %d.\n", v->value, v->lineno);
 			}
-		} else if (!strcasecmp(v->name, "use_q850_reason")) {
+			//
+		} else if (!strcasecmp(v->name, "defaulthangupcause")) { // Default Hangup Cause
+		         if ((sscanf(v->value, "%d", &global_defhangcause) != 1) || (global_defhangcause < 0)) {
+		            ast_log(LOG_WARNING, "'%s' is not a valid Default Hangup Cause at line %d.  Using default.\n", v->value, v->lineno);
+		            global_defhangcause = AST_CAUSE_CALL_REJECTED;
+		         }
+		      } else if (!strcasecmp(v->name, "rejectmode")) { // SIP OPTIONS behaviour
+		         ast_copy_string(global_reject_mode, v->value, sizeof(global_reject_mode));
+		      } else if (!strcasecmp(v->name, "videosize")) {
+		         if ((sscanf(v->value, "%d", &global_videosize) != 1) || (global_videosize < 0)) {
+		            ast_log(LOG_WARNING, "'%s' is not a valid videosize at line %d.  Using default.\n", v->value, v->lineno);
+		            global_videosize = DEFAULT_VIDEO_SIZE; //CIF
+		         }
+		      } else if (!strcasecmp(v->name, "amr_mode")) { // AMR-NB codec bitrate
+		         if ((sscanf(v->value, "%d", &global_amr_mode) != 1) || (global_amr_mode < 0) || (global_amr_mode > 7)) {
+		            ast_log(LOG_WARNING, "'%s' is not a valid AMR mode set %d.  Using default AMR122.\n", v->value, v->lineno);
+		            global_amr_mode = DEFAULT_AMR_MODE;
+		         }
+		      } else if (!strcasecmp(v->name, "amr_octetalign")) { // AMR-NB octet alignment
+		         global_amr_octetalign = ast_true(v->value);
+		      } else if (!strcasecmp(v->name, "send_ringing")) { // Send 180 Ringing by default
+		         ast_set2_flag(&ast_options2, ast_true(v->value), AST_OPT_FLAG2_SEND_RINGING);
+		      } else if (!strcasecmp(v->name, "dsp_media")) { // Activate SMRA
+		         ast_set2_flag(&ast_options2, ast_true(v->value), AST_OPT_FLAG2_USE_SMRA);
+			//
+		      } else if (!strcasecmp(v->name, "use_q850_reason")) {
 			ast_set2_flag(&global_flags[1], ast_true(v->value), SIP_PAGE2_Q850_REASON);
 		} else if (!strcasecmp(v->name, "maxforwards")) {
 			if ((sscanf(v->value, "%30d", &sip_cfg.default_max_forwards) != 1) || (sip_cfg.default_max_forwards < 1)) {
diff -Naur asterisk_com_smra/channels/sip/include/sip.h asterisk_com_reject/channels/sip/include/sip.h
--- asterisk_com_smra/channels/sip/include/sip.h	2012-03-30 16:48:49.000000000 +0100
+++ asterisk_com_reject/channels/sip/include/sip.h	2012-04-04 16:47:53.000000000 +0100
@@ -221,6 +221,7 @@
 #define DEFAULT_AMR_MODE      -1
 #define DEFAULT_OCTET_ALIGN   TRUE
 #define DEFAULT_VIDEO_SIZE    1  /*! < 1 = CIF */
+#define DEFAULT_REJECT_MODE   "" /*! strlen = 0 - ignore SIP OPTIONS, strlen > 0 - responde xx to SIP OPTIONS */
 /*@}*/
 
 /*! \name SIPflags
diff -Naur asterisk_com_smra/doc/core-en_US.xml asterisk_com_reject/doc/core-en_US.xml
--- asterisk_com_smra/doc/core-en_US.xml	2012-03-30 16:56:20.000000000 +0100
+++ asterisk_com_reject/doc/core-en_US.xml	2012-04-04 17:08:25.000000000 +0100
@@ -9972,6 +9972,20 @@
 			<para>Generates an AOC-D or AOC-E message on a channel.</para>
 		</description>
 	</manager>
+	   <manager name="RejectMode" language="en_US">
+      <synopsis>
+         Set Call Status to ACCEPT/REJECT.
+      </synopsis>
+      <syntax>
+         <xi:include xpointer="xpointer(/docs/manager[@name='Login']/syntax/parameter[@name='ActionID'])" />
+         <parameter name="Status" required="true">
+            <para>Status: yes or no.</para>
+         </parameter>
+      </syntax>
+      <description>
+         <para>Set Call Status to ACCEPT/REJECT.</para>
+      </description>
+   </manager>
 	<application name="Answer" language="en_US">
 		<synopsis>
 			Answer a channel if ringing.
diff -Naur asterisk_com_smra/main/manager.c asterisk_com_reject/main/manager.c
--- asterisk_com_smra/main/manager.c	2012-03-29 14:19:12.000000000 +0100
+++ asterisk_com_reject/main/manager.c	2012-04-04 16:48:00.000000000 +0100
@@ -806,6 +806,20 @@
 			<para>Generates an AOC-D or AOC-E message on a channel.</para>
 		</description>
 	</manager>
+	   <manager name="RejectMode" language="en_US">
+      <synopsis>
+         Set Call Status to ACCEPT/REJECT.
+      </synopsis>
+      <syntax>
+         <xi:include xpointer="xpointer(/docs/manager[@name='Login']/syntax/parameter[@name='ActionID'])" />
+         <parameter name="Status" required="true">
+            <para>Status: yes or no.</para>
+         </parameter>
+      </syntax>
+      <description>
+         <para>Set Call Status to ACCEPT/REJECT.</para>
+      </description>
+   </manager>
  ***/
 
 enum error_type {
@@ -2351,6 +2365,29 @@
 	return 0;
 }
 
+static int action_rejectmode(struct mansession *s, const struct message *m)
+{
+   const char *status = astman_get_header(m, "Status");
+
+   if (ast_true(status))
+   {
+      if (!ast_opt_reject_mode)
+         ast_log(LOG_NOTICE, "Setting call status to REJECT!\n");
+
+      ast_set2_flag(&ast_options2, 1, AST_OPT_FLAG2_REJECT_MODE);
+      astman_send_response(s, m, "RejectMode", "Rejecting calls");
+   }
+   else
+   {
+      if (ast_opt_reject_mode)
+         ast_log(LOG_NOTICE, "Setting call status to ACCEPT!\n");
+
+      ast_set2_flag(&ast_options2, 0, AST_OPT_FLAG2_REJECT_MODE);
+      astman_send_response(s, m, "RejectMode", "Accepting calls");
+   }
+   return 0;
+}
+
 static int action_getconfig(struct mansession *s, const struct message *m)
 {
 	struct ast_config *cfg;
@@ -6222,6 +6259,7 @@
 		ast_manager_register_xml("ModuleLoad", EVENT_FLAG_SYSTEM, manager_moduleload);
 		ast_manager_register_xml("ModuleCheck", EVENT_FLAG_SYSTEM, manager_modulecheck);
 		ast_manager_register_xml("AOCMessage", EVENT_FLAG_AOC, action_aocmessage);
+		ast_manager_register_xml("RejectMode", 0, action_rejectmode);
 
 		ast_cli_register_multiple(cli_manager, ARRAY_LEN(cli_manager));
 		ast_extension_state_add(NULL, NULL, manager_state_cb, NULL);

